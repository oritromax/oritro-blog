---
interface Props {
  post: {
    slug: string;
    data: {
      title: string;
      date: Date;
      description?: string;
      categories?: string[];
      tags?: string[];
      featured_image?: string;
      author: string;
    };
  };
}

const { post } = Astro.props;
const formattedDate = post.data.date.toLocaleDateString('en-US', {
  month: 'short',
  day: 'numeric',
});
const year = post.data.date.getFullYear();
---

<div class="group hover:bg-gray-800/30 rounded-xl transition-colors p-4 mb-4">
  <div class="flex flex-col space-y-2">
    <div class="text-sm text-gray-500 mb-2">
      {formattedDate}, {year}
    </div>
    <a 
      href={`/blog/${post.slug}`} 
      class="block text-lg lg:text-xl font-semibold text-white group-hover:text-emerald-300 transition-colors"
    >
      {post.data.title}
    </a>
    <p class="mt-2 text-gray-400 line-clamp-2">{post.data.description}</p>
    <div class="mt-4 flex flex-wrap items-center gap-2 lg:gap-6">
      {post.data.categories && post.data.categories.length > 0 && (
        <div class="flex items-center gap-2 flex-wrap">
          {post.data.categories.map((category: string) => (
            <a 
              href={`/category/${encodeURIComponent(category)}`}
              class="px-3 py-1 bg-emerald-400/10 text-emerald-400 rounded-full text-sm font-medium hover:bg-emerald-400/20 transition-colors"
            >
              {category}
            </a>
          ))}
        </div>
      )}
      {post.data.tags && post.data.tags.length > 0 && (
        <div class="flex items-center gap-1 lg:gap-2 flex-wrap">
          {post.data.tags.map((tag: string) => (
            <a 
              href={`/tag/${encodeURIComponent(tag)}`}
              class="px-2 py-0.5 bg-gray-800 text-gray-400 rounded-full text-xs hover:bg-gray-700 transition-colors"
            >
              {tag}
            </a>
          ))}
        </div>
      )}
    </div>
  </div>
</div>