---
import { getCollection } from 'astro:content';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const blogEntries = await getCollection('blog');
  return blogEntries.map(entry => ({
    params: { slug: entry.slug },
    props: { entry }
  }));
}

const { entry } = Astro.props;

const { Content } = await entry.render();

const formattedDate = new Date(entry.data.date).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'long',
  day: 'numeric'
});
---

<Layout title={entry.data.title}>
  <article class="max-w-4xl mx-auto px-4 py-8">
    <a 
      href="/" 
      class="text-emerald-400 hover:text-emerald-300 transition-colors inline-flex items-center gap-2 mb-8"
    >
      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4"><path d="m15 18-6-6 6-6"/></svg>
      Back to home
    </a>

    <header class="mb-8">
      <h1 class="text-3xl lg:text-4xl font-bold mb-4">{entry.data.title}</h1>
      
      <div class="flex flex-wrap items-center gap-4 text-gray-400 mb-6">
        <div class="flex items-center gap-2">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4"><rect width="18" height="18" x="3" y="4" rx="2" ry="2"/><line x1="16" x2="16" y1="2" y2="6"/><line x1="8" x2="8" y1="2" y2="6"/><line x1="3" x2="21" y1="10" y2="10"/></svg>
          <span>{formattedDate}</span>
        </div>
        {entry.data.categories && entry.data.categories.length > 0 && (
          <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4 flex-shrink-0"><path d="M9 3h6l3 9-8 11L2 12l3-9H9z"/></svg>
            <div class="flex flex-wrap gap-2">
              {entry.data.categories.map((category) => (
                <a 
                  href={`/category/${encodeURIComponent(category)}`} 
                  class="px-3 py-1 bg-emerald-400/10 text-emerald-400 rounded-full text-sm font-medium hover:bg-emerald-400/20 transition-colors"
                >
                  {category}
                </a>
              ))}
            </div>
          </div>
        )}
        {entry.data.author && (
          <div class="flex items-center gap-2">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4"><circle cx="12" cy="8" r="5"/><path d="M20 21a8 8 0 0 0-16 0"/></svg>
            <span>{entry.data.author}</span>
          </div>
        )}
      </div>

      <div class="relative h-[300px] lg:h-[400px] rounded-2xl overflow-hidden mb-8">
        <div class="absolute inset-0 bg-gradient-to-br from-emerald-400/20 to-purple-400/20 -rotate-2"></div>
        <div class="absolute inset-0 border-2 border-white/10 rotate-2"></div>
        {entry.data.featured_image ? (
          <img
            src={entry.data.featured_image}
            alt={entry.data.title}
            class="w-full h-full object-cover"
          />
        ) : (
          <img
            src="https://images.unsplash.com/photo-1461749280684-dccba630e2f6?auto=format&fit=crop&q=80"
            alt={entry.data.title}
            class="w-full h-full object-cover"
          />
        )}
      </div>
    </header>

    <!-- Alert Boxes Example -->
    {entry.data.description && (
      <div class="flex items-start gap-3 p-4 bg-blue-400/10 border border-blue-400/20 rounded-lg mb-8">
        <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-5 h-5 text-blue-400 mt-0.5"><circle cx="12" cy="12" r="10"/><path d="M12 16v-4"/><path d="M12 8h.01"/></svg>
        <div>
          <h4 class="font-semibold text-blue-400 mb-1">About this post</h4>
          <p class="text-blue-100/80 text-sm">{entry.data.description}</p>
        </div>
      </div>
    )}

    <!-- Blog Content -->
    <div class="prose lg:prose-xl prose-invert prose-emerald max-w-none mb-8">
      <Content />
    </div>

    <!-- Tags -->
    {entry.data.tags && entry.data.tags.length > 0 && (
      <div class="mt-12 pt-8 border-t border-gray-800">
        <div class="flex flex-wrap gap-2">
          {entry.data.tags.map((tag) => (
            <a 
              href={`/tag/${encodeURIComponent(tag)}`}
              class="px-3 py-1 bg-gray-800 text-gray-400 rounded-full text-sm hover:bg-gray-700 hover:text-white transition-colors"
            >
              #{tag}
            </a>
          ))}
        </div>
      </div>
    )}
  </article>
</Layout>