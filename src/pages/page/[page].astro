---
import Layout from '../../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import TimelinePost from '../../components/TimelinePost.astro';

export async function getStaticPaths() {
  const allPosts = await getCollection('blog');
  const sortedPosts = allPosts.sort(
    (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
  );
  
  const postsPerPage = 5;
  const totalPages = Math.ceil(sortedPosts.length / postsPerPage);
  
  return Array.from({ length: totalPages }).map((_, i) => {
    const page = i + 1;
    const start = i * postsPerPage;
    const end = start + postsPerPage;
    
    return {
      params: { page: page.toString() },
      props: { 
        posts: sortedPosts.slice(start, end),
        currentPage: page,
        totalPages,
        allPosts,
      }
    };
  });
}

const { posts, currentPage, totalPages, allPosts } = Astro.props;

// Get all unique tags
const allTags = [...new Set(allPosts.flatMap(post => post.data.tags || []))];

// Get all unique categories
const allCategories = [...new Set(allPosts.flatMap(post => post.data.categories || ['Uncategorized']))];
---

<Layout title={`My Blog - Page ${currentPage}`}>
  <div class="p-4 lg:p-8">
    <h2 class="text-xl lg:text-2xl font-bold mb-4 lg:mb-8">Latest Posts - Page {currentPage}</h2>
    
    {posts.map((post) => (
      <TimelinePost post={post} />
    ))}
    
    <!-- Pagination -->
    <div class="mt-8 flex items-center justify-between">
      {currentPage > 1 ? (
        <a
          href={currentPage === 2 ? '/' : `/page/${currentPage - 1}`}
          class="flex items-center gap-2 px-4 py-2 rounded-lg bg-gray-800 text-gray-400 hover:bg-gray-700 hover:text-white transition-colors"
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4"><path d="m15 18-6-6 6-6"/></svg>
          Previous
        </a>
      ) : (
        <button
          disabled
          class="flex items-center gap-2 px-4 py-2 rounded-lg bg-gray-800 text-gray-400 disabled:opacity-50 disabled:cursor-not-allowed"
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4"><path d="m15 18-6-6 6-6"/></svg>
          Previous
        </button>
      )}
      
      <div class="flex items-center gap-2">
        {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
          <a
            href={page === 1 ? '/' : `/page/${page}`}
            class={`
              w-8 h-8 rounded-lg flex items-center justify-center transition-colors
              ${currentPage === page
                ? 'bg-emerald-400/20 text-emerald-400'
                : 'bg-gray-800 text-gray-400 hover:bg-gray-700 hover:text-white'
              }
            `}
          >
            {page}
          </a>
        ))}
      </div>
      
      {currentPage < totalPages ? (
        <a
          href={`/page/${currentPage + 1}`}
          class="flex items-center gap-2 px-4 py-2 rounded-lg bg-gray-800 text-gray-400 hover:bg-gray-700 hover:text-white transition-colors"
        >
          Next
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4"><path d="m9 18 6-6-6-6"/></svg>
        </a>
      ) : (
        <button
          disabled
          class="flex items-center gap-2 px-4 py-2 rounded-lg bg-gray-800 text-gray-400 disabled:opacity-50 disabled:cursor-not-allowed"
        >
          Next
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="w-4 h-4"><path d="m9 18 6-6-6-6"/></svg>
        </button>
      )}
    </div>
    
    <!-- Desktop Sidebar with Categories and Tags -->
    <div class="hidden lg:block fixed top-32 right-8 w-64 bg-gray-800/30 rounded-xl p-6">
      <div class="mb-8">
        <h3 class="text-lg font-semibold mb-4">Categories</h3>
        <ul class="space-y-2">
          {allCategories.map(category => (
            <li>
              <a 
                href={`/category/${encodeURIComponent(category)}`}
                class="hover:text-emerald-400 flex justify-between items-center text-gray-300"
              >
                <span>{category}</span>
                <span class="bg-gray-800 text-gray-400 px-2 py-1 rounded-full text-xs">
                  {allPosts.filter(post => post.data.categories?.includes(category)).length}
                </span>
              </a>
            </li>
          ))}
        </ul>
      </div>
      
      <!-- <div>
        <h3 class="text-lg font-semibold mb-4">Tags</h3>
        <div class="flex flex-wrap gap-2">
          {allTags.map(tag => (
            <a 
              href={`/tag/${encodeURIComponent(tag)}`}
              class="px-3 py-1 bg-gray-800 text-gray-400 rounded-full text-sm hover:bg-gray-700 hover:text-white transition-colors"
            >
              {tag}
            </a>
          ))}
        </div>
      </div> -->
    </div>
  </div>
</Layout>